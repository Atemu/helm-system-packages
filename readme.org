#+TITLE: Helm System Packages

* Introduction

Helm System Packages is an Emacs-based interface to the package manager of your
operating system.

Emacs' knowledge is not required: see the [[stand-alone][stand-alone]] folder for a version for
non-Emacs users.  Run the script and everything should be self-explanatory.  If
it's not then it's bug, please report it.

Start ~helm-system-packages~ to list all available packages (with installed
packages as well as dependencies displayed in their own respective face).
Fuzzy-search, mark and execute the desired action over any set of packages:

- Install
- Uninstall
- Display packages details or insert details at point
- Find files
- And much more.

Some package managers come with their specific actions and even specific
sources, e.g. Portage's USE flags.

* Usage

There is only one entry point: ~helm-system-packages~.

Use the persistent action to view the details of the marked packages.

Most actions can be called with a prefix argument to insert the result at point.

Transactions such as installing and removing packages are run via the `sudo`
command in Eshell.
If you'd like to cache the password for, say, an hour, you can configure Eshell
to use its own version of sudo via TRAMP:

: (require 'em-tramp)
: (setq password-cache t)
: (setq password-cache-expiry 3600)

* Motivation

Most of the package managers GUIs out there do not provide much efficiency over
their commandline counterparts.

The commandline workflow is centered around a cumbersome try-repeat loop:

1. Search for local packages.
2. Package missing?  Search for remote packages.
3. List is too long?  Pipe through a pager.
4. (Un)install the desired package by writing the searched package names again.

With Helm all those actions get factored into one.
Helm sessions can also be resumed.

* Development

Each module is rather straightforward, it only need to define the following:

- A ~helm-system-packages-FOO~ function that starts a Helm session.
- An interactive ~helm-system-packages-FOO-refresh~ function to refresh the package list either manually or after transactions.

The candidate faces can be customized from the ~helm-system-packages--display-lists~ variable.
A candidate can have multiple faces.

The =helm-system-packages.el= file provides some helper functions for Helm actions.

** Roadmap
*** TODO Factor all "info" actions?
We can add Org subsections for files, dependencies, etc.
Those sections should be folded by default.

We probably still need specific "info" actions to insert at point.
*** TODO Use bindings reflecting helm-list-elisp-packages
*** TODO [#A] Dependencies/Reverse dependencies should fire up a new Helm-System-Packages session.
Done for pacman.
*** Add option to display multiline candidates for long descriptions.
*** find-file action: Split packages in sources
Done for pacman.
*** With filtering, the displayed condidates won't include those above the candidate limit
Can we include as many filtered candidates as possible?
*** Add xbps (Void Linux) support
*** Add guix support
*** Add homebrew support

* References
- https://wiki.voidlinux.eu/Rosetta_stone
- https://wiki.archlinux.org/index.php/Pacman/Rosetta
- https://github.com/jabranham/system-packages
